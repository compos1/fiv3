def func1(arg1, arg2):
    var28 = func7()
    var34 = var31(var28, arg1)
    var35 = var28 & (var34 ^ (var34 + -975599493))
    if arg1 < arg2:
        var36 = arg2 & var28 + var35
    else:
        var36 = (-1316659661 & arg1 ^ -1231705373) & 708119996
    var37 = var35 - ((354 ^ var28) | 1282851033)
    var38 = arg2 + var34 - arg1 ^ var28
    var39 = (var37 - var28) | -363
    var40 = var38 & -969
    var41 = (537 | arg2 ^ 1878016324) ^ arg1
    var42 = 785320320 - var34 + var34 + arg1
    var43 = (var38 | -1345579997) ^ arg1 + var40
    var44 = (var40 ^ var37) | var41
    var45 = (var28 | -756564594 | var28) ^ var40
    var46 = (var35 & var39) + var37 - var41
    var47 = var44 - var40
    var48 = ((var47 ^ var45) & var38) + var38
    result = var42 + (((var47 ^ arg1) - var39) | var37)
    return result
def func10(arg32, arg33):
    result = 176 & 720 + -844464945 + -365699007
    return result
def func9():
    closure = [-10]
    def func8(arg29, arg30):
        closure[0] += func10(arg29, arg30)
        return closure[0]
    func = func8
    return func
var31 = func9()
def func7():
    func2()
    result = len((3 ^ i + (-6 ^ -1 - ((-1 & i | i) ^ ((i - (-4 - 2) - -1) + 7))) for i in func4(7, 2)))
    func3()
    return result
def func5(arg5, arg6):
    var11 = func6(arg6, arg5)
    var12 = ((360 & arg5) - arg5 | (704 ^ arg5 - arg5)) - -759 ^ 1115530621 - (1606884265 | var11) | ((arg5 & -1804255530) | var11 | -424 - (1467935516 & (arg6 - arg5) - 248) + arg5 + arg6) - var11 - arg6
    if var12 < arg6:
        var13 = var12 ^ arg5
    else:
        var13 = ((var11 | var11 - arg6 + 423 ^ var11) - (-641 | -705)) - var11
    var14 = 84 + -949
    var15 = var11 - var11 & (var12 + (arg5 ^ -618357305 ^ -1047188612 ^ ((arg6 - (arg6 ^ var14) ^ (var14 & var12) | var14 | var11 ^ var12) & var11 ^ var12))) & var11 - var12 | arg6 ^ var14 | arg5 | var12
    var16 = arg5 + (arg5 & arg6) + var15
    result = var12 + var12 | ((((var14 + (-527 & -379)) | arg6 + (var14 ^ -26)) ^ arg6 + arg6 + arg5) | var11)
    return result
def func6(arg7, arg8):
    var9 = 0
    for var10 in range(9):
        var9 += var9 & var10 - var10
    return var9
def func4(arg3, arg4):
    var17 = func5(-179443879, 813)
    yield var17
    var18 = 644 + arg4
    yield var18
    var19 = var18 | -982 | arg3 ^ -858844559
    yield var19
    var20 = (arg3 | -1575372677) + arg3
    yield var20
    var21 = (350 - -430) + -2015571388 - var20
    yield var21
    var22 = (-267 - var21 | arg4) - 1765749887
    yield var22
    var23 = var22 - arg3
    yield var23
    var24 = var23 + var22 | 2128875960 + var18
    yield var24
    var25 = arg3 | arg4
    yield var25
    var26 = var20 ^ var21
    yield var26
    var27 = var18 + 6 + var21 - var21
    yield var27
def func3():
    global len
    del len
def func2():
    global len
    len = lambda x : 8
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 49'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
